---
description: Critical rules for working with the documentation system to avoid common pitfalls
globs: 
  - "docs/**/*.md"
  - "**/*.md"
alwaysApply: true
---

# Documentation System Rules

## 🚫 **NEVER DO THESE THINGS**

### ❌ **Never run docs:validate directly in terminal**
```bash
# ❌ NEVER DO THIS - Output can be overwhelming and hard to analyze
pnpm docs:validate

# ✅ ALWAYS pipe to file first, then analyze the file:
pnpm docs:validate > docs_validate_output.log 2>&1
# Then read the file:
cat docs_validate_output.log
# Or search within it:
grep "warning" docs_validate_output.log
grep "error" docs_validate_output.log
```

**Why:** Direct output is overwhelming and makes analysis difficult. Always capture to file first.

### ❌ **Never assume list indentation without checking**
- Always check actual remark-lint rule documentation
- `remark-lint-list-item-bullet-indent` prevents spaces BEFORE bullets
- `remark-lint-list-item-indent` controls spacing WITHIN list items

### ❌ **Never bypass pre-commit hooks without understanding why**
```bash
# ❌ Don't just use --no-verify without understanding
git commit --no-verify

# ✅ Understand why the hook is failing first
```

## ✅ **ALWAYS DO THESE THINGS**

### ✅ **Always check actual file content when investigating warnings**
```bash
# Check specific lines mentioned in warnings
sed -n '89p' docs/some-file.md
sed -n '90p' docs/some-file.md
```

### ✅ **Always test configuration changes incrementally**
1. Make small changes
2. Test immediately
3. Verify the change worked
4. Make next change

## 🔧 **Documentation Commands**

### **Individual Commands**
```bash
# TOC generation
pnpm docs:toc              # Generate/update TOCs for all files
pnpm docs:toc:watch        # Auto-update TOCs on file changes

# Validation and fixing
pnpm docs:check            # Preview changes without applying
pnpm docs:fix              # Apply fixes to documentation
pnpm docs:validate         # Validate all documentation

# Quality and analysis
pnpm docs:quality          # Content quality analysis
pnpm docs:links            # Link validation
pnpm docs:workflow         # Workflow optimization
```

### **Comprehensive Commands**
```bash
# Run all fixers in sequence
pnpm docs:fix-all          # TOC + fix + quality + links + workflow

# Complete workflow
pnpm docs:fix-and-validate # All fixers + validation
```

### **Debugging Commands That Work**
```bash
# ALWAYS capture validation output to file first
pnpm docs:validate > docs_validate_output.log 2>&1

# Then analyze the captured output:
# Count warnings by type
grep "list-item-bullet-indent" docs_validate_output.log | wc -l

# See last few warnings
tail -10 docs_validate_output.log

# Search for specific patterns
grep "warning" docs_validate_output.log
grep "error" docs_validate_output.log

# Preview changes without applying
pnpm docs:check

# Apply fixes and validate
pnpm docs:fix
```

## 📚 **List Indentation Rules**
- **`remark-lint-list-item-bullet-indent`**: Prevents spaces before bullets (e.g., ` *` → `*`)
- **`remark-lint-list-item-indent`**: Controls spacing after bullets (configured to `'one'`)

### Proper Nested List Format
```markdown
- Item 1
    - Sub item 1
    - Sub item 2
- Item 2
```

NOT:
```markdown
- Item 1
 * Sub item 1 ❌ Space before bullet
 * Sub item 2 ❌ Space before bullet
- Item 2
```

## 🎯 **Recommended Workflow**

### **For Daily Development**
```bash
# Quick fix everything
pnpm docs:fix-and-validate

# Or step by step
pnpm docs:fix-all
pnpm docs:validate > validation.log 2>&1
```

### **For TOC Management**
```bash
# Generate TOCs for all files
pnpm docs:toc

# Watch mode during development
pnpm docs:toc:watch
```

### **For Analysis**
```bash
# Check what would be fixed
pnpm docs:check

# Quality analysis
pnpm docs:quality

# Link validation
pnpm docs:links
```
