name: Validation System Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/validation/**'
      - 'plugins/remark-kilocode-comprehensive.js'
      - 'src/validation/__tests__/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/validation/**'
      - 'plugins/remark-kilocode-comprehensive.js'
      - 'src/validation/__tests__/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run unit tests
      run: npm run test -- --run src/validation/__tests__/
      
    - name: Run comprehensive test suite
      run: npm run test -- --run src/validation/__tests__/comprehensive-test-suite.test.ts
      
    - name: Generate test report
      run: |
        cd src
        npx vitest run validation/__tests__/comprehensive-test-suite.test.ts --reporter=verbose > test-report.txt
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          test-report.txt
          coverage/
        retention-days: 30
        
    - name: Run performance benchmarks
      run: |
        cd src
        npx vitest run validation/__tests__/comprehensive-test-suite.test.ts --reporter=verbose | grep -E "(Benchmark|Performance|Duration)" > performance-report.txt
        
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results-node-${{ matrix.node-version }}
        path: performance-report.txt
        retention-days: 30

  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm run test:coverage -- src/validation/__tests__/
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: validation-system
        name: validation-system-coverage
        fail_ci_if_error: false

  integration:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run integration tests
      run: npm run test -- --run src/validation/__tests__/ComprehensivePluginIntegration.test.ts
      
    - name: Test plugin integration
      run: |
        cd src
        npx vitest run validation/__tests__/ComprehensivePluginIntegration.test.ts --reporter=verbose

  performance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run performance tests
      run: |
        cd src
        npx vitest run validation/__tests__/comprehensive-test-suite.test.ts --reporter=verbose | grep -A 10 -B 10 "Performance Tests"
        
    - name: Validate performance requirements
      run: |
        cd src
        timeout 35s npx vitest run validation/__tests__/comprehensive-test-suite.test.ts --reporter=verbose
        echo "Performance tests completed within 35 seconds"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for known vulnerabilities
      run: |
        npm audit --audit-level=high --json > audit-results.json || true
        
    - name: Upload security audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit-results
        path: audit-results.json
        retention-days: 30
