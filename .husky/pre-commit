branch="$(git rev-parse --abbrev-ref HEAD)"
upstream="$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null || echo '')"

# Allow commits to main if it's tracking origin/main, but block if tracking upstream/main
if [ "$branch" = "main" ]; then
  if [[ "$upstream" == *"origin/main" ]]; then
    echo "Allowing commit to main (tracking origin/main)"
  else
    echo "You can't commit directly to main - please check out a branch."
    exit 1
  fi
fi

# Detect if running on Windows and use pnpm.cmd, otherwise use pnpm.
if [ "$OS" = "Windows_NT" ]; then
  pnpm_cmd="pnpm.cmd"
else
  if command -v pnpm >/dev/null 2>&1; then
    pnpm_cmd="pnpm"
  else
    pnpm_cmd="npx pnpm"
  fi
fi

# Detect if running on Windows and use npx.cmd, otherwise use npx.
if [ "$OS" = "Windows_NT" ]; then
  npx_cmd="npx.cmd"
else
  npx_cmd="npx"
fi

$npx_cmd lint-staged
$pnpm_cmd lint

# Documentation validation and maintenance - TEMPORARILY DISABLED
# echo "🔍 Validating documentation..."
# if ! $pnpm_cmd docs:validate; then
#   echo "❌ Documentation validation failed. Please fix the issues above."
#   echo "💡 You can run 'pnpm docs:fix' to automatically fix some issues."
#   exit 1
# fi

# echo "🔧 Running documentation maintenance..."
# if ! $pnpm_cmd docs:maintain; then
#   echo "❌ Documentation maintenance failed. Please check the errors above."
#   exit 1
# fi

# echo "✅ Documentation validation and maintenance completed successfully!"
