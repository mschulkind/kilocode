{
	"numTotalTestSuites": 48,
	"numPassedTestSuites": 48,
	"numFailedTestSuites": 0,
	"numPendingTestSuites": 0,
	"numTotalTests": 89,
	"numPassedTests": 0,
	"numFailedTests": 0,
	"numPendingTests": 89,
	"numTodoTests": 0,
	"snapshot": {
		"added": 0,
		"failure": false,
		"filesAdded": 0,
		"filesRemoved": 0,
		"filesRemovedList": [],
		"filesUnmatched": 0,
		"filesUpdated": 0,
		"matched": 0,
		"total": 0,
		"unchecked": 0,
		"uncheckedKeysByFile": [],
		"unmatched": 0,
		"updated": 0,
		"didUpdate": false
	},
	"startTime": 1758984004470,
	"success": true,
	"testResults": [
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Category1Analyzer", "Constructor and Initialization"],
					"fullName": "Category1Analyzer Constructor and Initialization should initialize with valid analysis data structure",
					"status": "skipped",
					"title": "should initialize with valid analysis data structure",
					"failureMessages": [],
					"location": { "line": 30, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "File Depth Calculation"],
					"fullName": "Category1Analyzer File Depth Calculation should calculate correct depths for typical file paths",
					"status": "skipped",
					"title": "should calculate correct depths for typical file paths",
					"failureMessages": [],
					"location": { "line": 46, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "File Depth Calculation"],
					"fullName": "Category1Analyzer File Depth Calculation should handle files outside docs directory",
					"status": "skipped",
					"title": "should handle files outside docs directory",
					"failureMessages": [],
					"location": { "line": 52, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Relative Path Detection"],
					"fullName": "Category1Analyzer Relative Path Detection should correctly identify relative paths",
					"status": "skipped",
					"title": "should correctly identify relative paths",
					"failureMessages": [],
					"location": { "line": 59, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Relative Path Detection"],
					"fullName": "Category1Analyzer Relative Path Detection should reject external URLs and absolute paths",
					"status": "skipped",
					"title": "should reject external URLs and absolute paths",
					"failureMessages": [],
					"location": { "line": 65, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Pattern Categorization"],
					"fullName": "Category1Analyzer Violation Pattern Categorization should categorize GLOSSARY references correctly",
					"status": "skipped",
					"title": "should categorize GLOSSARY references correctly",
					"failureMessages": [],
					"location": { "line": 73, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Pattern Categorization"],
					"fullName": "Category1Analyzer Violation Pattern Categorization should categorize ORCHESTRATOR references correctly",
					"status": "skipped",
					"title": "should categorize ORCHESTRATOR references correctly",
					"failureMessages": [],
					"location": { "line": 79, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Pattern Categorization"],
					"fullName": "Category1Analyzer Violation Pattern Categorization should categorize ARCHITECTURE references correctly",
					"status": "skipped",
					"title": "should categorize ARCHITECTURE references correctly",
					"failureMessages": [],
					"location": { "line": 84, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Pattern Categorization"],
					"fullName": "Category1Analyzer Violation Pattern Categorization should categorize STANDARDS_CORE references correctly",
					"status": "skipped",
					"title": "should categorize STANDARDS_CORE references correctly",
					"failureMessages": [],
					"location": { "line": 89, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Pattern Categorization"],
					"fullName": "Category1Analyzer Violation Pattern Categorization should categorize DOCUMENTATION_GUIDE references correctly",
					"status": "skipped",
					"title": "should categorize DOCUMENTATION_GUIDE references correctly",
					"failureMessages": [],
					"location": { "line": 94, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Pattern Categorization"],
					"fullName": "Category1Analyzer Violation Pattern Categorization should categorize unrecognized patterns as OTHER_REF",
					"status": "skipped",
					"title": "should categorize unrecognized patterns as OTHER_REF",
					"failureMessages": [],
					"location": { "line": 99, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Path Correction Logic"],
					"fullName": "Category1Analyzer Path Correction Logic should fix GLOSSARY.md paths based on depth",
					"status": "skipped",
					"title": "should fix GLOSSARY.md paths based on depth",
					"failureMessages": [],
					"location": { "line": 106, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Path Correction Logic"],
					"fullName": "Category1Analyzer Path Correction Logic should fix DOCUMENTATION_GUIDE paths correctly",
					"status": "skipped",
					"title": "should fix DOCUMENTATION_GUIDE paths correctly",
					"failureMessages": [],
					"location": { "line": 114, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Detection Logic"],
					"fullName": "Category1Analyzer Violation Detection Logic should detect violations with correct patterns",
					"status": "skipped",
					"title": "should detect violations with correct patterns",
					"failureMessages": [],
					"location": { "line": 121, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Detection Logic"],
					"fullName": "Category1Analyzer Violation Detection Logic should return null for external URLs",
					"status": "skipped",
					"title": "should return null for external URLs",
					"failureMessages": [],
					"location": { "line": 135, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Violation Detection Logic"],
					"fullName": "Category1Analyzer Violation Detection Logic should determine fix types correctly",
					"status": "skipped",
					"title": "should determine fix types correctly",
					"failureMessages": [],
					"location": { "line": 147, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Analysis Summary Generation"],
					"fullName": "Category1Analyzer Analysis Summary Generation should correctly count violations by pattern",
					"status": "skipped",
					"title": "should correctly count violations by pattern",
					"failureMessages": [],
					"location": { "line": 155, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Analysis Summary Generation"],
					"fullName": "Category1Analyzer Analysis Summary Generation should generate TOP patterns in correct order",
					"status": "skipped",
					"title": "should generate TOP patterns in correct order",
					"failureMessages": [],
					"location": { "line": 171, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Error Handling"],
					"fullName": "Category1Analyzer Error Handling should handle file parsing errors gracefully",
					"status": "skipped",
					"title": "should handle file parsing errors gracefully",
					"failureMessages": [],
					"location": { "line": 192, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Analyzer", "Error Handling"],
					"fullName": "Category1Analyzer Error Handling should handle deeply nested directory structures",
					"status": "skipped",
					"title": "should handle deeply nested directory structures",
					"failureMessages": [],
					"location": { "line": 196, "column": 13 },
					"meta": {}
				}
			],
			"startTime": 1758984004470,
			"endTime": 1758984004470,
			"status": "passed",
			"message": "",
			"name": "/home/matt/code/system/kilocode/scripts/docs-fixes/src/category1-analyzer.test.js"
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Category1Patterns", "GlossaryPaths Trajectory"],
					"fullName": "Category1Patterns GlossaryPaths Trajectory fixGlossaryPath_Trigger should return (../..) depth for standards/core files",
					"status": "skipped",
					"title": "fixGlossaryPath_Trigger should return (../..) depth for standards/core files",
					"failureMessages": [],
					"location": { "line": 30, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "GlossaryPaths Trajectory"],
					"fullName": "Category1Patterns GlossaryPaths Trajectory fixGlossaryPath_Trigger should return ../ when not deeply-nested",
					"status": "skipped",
					"title": "fixGlossaryPath_Trigger should return ../ when not deeply-nested",
					"failureMessages": [],
					"location": { "line": 37, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "GlossaryPaths Trajectory"],
					"fullName": "Category1Patterns GlossaryPaths Trajectory fixGlossaryPath_Trigger should return non-GLOSSARY paths unchanged if not matching",
					"status": "skipped",
					"title": "fixGlossaryPath_Trigger should return non-GLOSSARY paths unchanged if not matching",
					"failureMessages": [],
					"location": { "line": 44, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "OrchestratorPaths Trajectory"],
					"fullName": "Category1Patterns OrchestratorPaths Trajectory fixOrchestratorPaths should return ../../../orchestrator/... when from standards/core",
					"status": "skipped",
					"title": "fixOrchestratorPaths should return ../../../orchestrator/... when from standards/core",
					"failureMessages": [],
					"location": { "line": 53, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "OrchestratorPaths Trajectory"],
					"fullName": "Category1Patterns OrchestratorPaths Trajectory fixOrchestratorPaths should return ../orchestrator/... when from shallow positions",
					"status": "skipped",
					"title": "fixOrchestratorPaths should return ../orchestrator/... when from shallow positions",
					"failureMessages": [],
					"location": { "line": 60, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "ArchitecturePaths Trajectory"],
					"fullName": "Category1Patterns ArchitecturePaths Trajectory fixArchitecturePaths should return ../../../architecture/... for standards/core viewing architecture.",
					"status": "skipped",
					"title": "fixArchitecturePaths should return ../../../architecture/... for standards/core viewing architecture.",
					"failureMessages": [],
					"location": { "line": 69, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "StandardsCorePaths Trajectory"],
					"fullName": "Category1Patterns StandardsCorePaths Trajectory fixStandardsCorePaths should return ../../../standards/core/... for nested origin paths.",
					"status": "skipped",
					"title": "fixStandardsCorePaths should return ../../../standards/core/... for nested origin paths.",
					"failureMessages": [],
					"location": { "line": 78, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "DocumentationGuidePath Trajectory"],
					"fullName": "Category1Patterns DocumentationGuidePath Trajectory FixDocGuidePath should return ../../DOCUMENTATION_GUIDE.md for nested path",
					"status": "skipped",
					"title": "FixDocGuidePath should return ../../DOCUMENTATION_GUIDE.md for nested path",
					"failureMessages": [],
					"location": { "line": 87, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "Validation Trajectory"],
					"fullName": "Category1Patterns Validation Trajectory validateCorrectedPath should account for filesystem presence.",
					"status": "skipped",
					"title": "validateCorrectedPath should account for filesystem presence.",
					"failureMessages": [],
					"location": { "line": 96, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "Validation Trajectory"],
					"fullName": "Category1Patterns Validation Trajectory validateCorrectedPath should handle omittedBase.",
					"status": "skipped",
					"title": "validateCorrectedPath should handle omittedBase.",
					"failureMessages": [],
					"location": { "line": 104, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "Batch Processing"],
					"fullName": "Category1Patterns Batch Processing processPatternFixesFromViolationList should acquire as expected violations and generate fixes.",
					"status": "skipped",
					"title": "processPatternFixesFromViolationList should acquire as expected violations and generate fixes.",
					"failureMessages": [],
					"location": { "line": 114, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "Pattern Register Initialisation Flat Map"],
					"fullName": "Category1Patterns Pattern Register Initialisation Flat Map patterns.patternRegisters.GLOSSARY should be defined and contain symbol once constructed",
					"status": "skipped",
					"title": "patterns.patternRegisters.GLOSSARY should be defined and contain symbol once constructed",
					"failureMessages": [],
					"location": { "line": 134, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "Pattern Register Initialisation Flat Map"],
					"fullName": "Category1Patterns Pattern Register Initialisation Flat Map patterns.patternRegisters.ORCHESTRATOR should contain sym property defineable regular expression",
					"status": "skipped",
					"title": "patterns.patternRegisters.ORCHESTRATOR should contain sym property defineable regular expression",
					"failureMessages": [],
					"location": { "line": 140, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Category1Patterns", "Pattern Register Initialisation Flat Map"],
					"fullName": "Category1Patterns Pattern Register Initialisation Flat Map patterns.patternRegisters.ARCHITECTURE.pathPatterns should work consistently with pattern matching.",
					"status": "skipped",
					"title": "patterns.patternRegisters.ARCHITECTURE.pathPatterns should work consistently with pattern matching.",
					"failureMessages": [],
					"location": { "line": 148, "column": 13 },
					"meta": {}
				}
			],
			"startTime": 1758984004470,
			"endTime": 1758984004470,
			"status": "passed",
			"message": "",
			"name": "/home/matt/code/system/kilocode/scripts/docs-fixes/src/category1-patterns.test.js"
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Enhanced AST Processor", "Deep Nested Path Calculations"],
					"fullName": "Enhanced AST Processor Deep Nested Path Calculations should handle standards/core/ path depth calculations correctly",
					"status": "skipped",
					"title": "should handle standards/core/ path depth calculations correctly",
					"failureMessages": [],
					"location": { "line": 37, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Deep Nested Path Calculations"],
					"fullName": "Enhanced AST Processor Deep Nested Path Calculations should handle deeply nested standards/core/subdir paths",
					"status": "skipped",
					"title": "should handle deeply nested standards/core/subdir paths",
					"failureMessages": [],
					"location": { "line": 48, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Deep Nested Path Calculations"],
					"fullName": "Enhanced AST Processor Deep Nested Path Calculations should calculate paths correctly from docs root level",
					"status": "skipped",
					"title": "should calculate paths correctly from docs root level",
					"failureMessages": [],
					"location": { "line": 56, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Dynamic GLOSSARY.md Path Calculation"],
					"fullName": "Enhanced AST Processor Dynamic GLOSSARY.md Path Calculation should calculate correct GLOSSARY.md paths based on source file depth",
					"status": "skipped",
					"title": "should calculate correct GLOSSARY.md paths based on source file depth",
					"failureMessages": [],
					"location": { "line": 66, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Dynamic GLOSSARY.md Path Calculation"],
					"fullName": "Enhanced AST Processor Dynamic GLOSSARY.md Path Calculation should handle complex nested directory structures",
					"status": "skipped",
					"title": "should handle complex nested directory structures",
					"failureMessages": [],
					"location": { "line": 83, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Multi-Target Path Resolution"],
					"fullName": "Enhanced AST Processor Multi-Target Path Resolution should resolve orchestrator cross-references correctly",
					"status": "skipped",
					"title": "should resolve orchestrator cross-references correctly",
					"failureMessages": [],
					"location": { "line": 97, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Multi-Target Path Resolution"],
					"fullName": "Enhanced AST Processor Multi-Target Path Resolution should resolve architecture cross-references correctly",
					"status": "skipped",
					"title": "should resolve architecture cross-references correctly",
					"failureMessages": [],
					"location": { "line": 112, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Enhanced Validation Integration"],
					"fullName": "Enhanced AST Processor Enhanced Validation Integration should validate all newly calculated paths exist",
					"status": "skipped",
					"title": "should validate all newly calculated paths exist",
					"failureMessages": [],
					"location": { "line": 128, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Enhanced Validation Integration"],
					"fullName": "Enhanced AST Processor Enhanced Validation Integration should handle non-existent path validation gracefully",
					"status": "skipped",
					"title": "should handle non-existent path validation gracefully",
					"failureMessages": [],
					"location": { "line": 140, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Enhanced Path Processing Integration"],
					"fullName": "Enhanced AST Processor Enhanced Path Processing Integration should integrate with existing fixPathIssuesAST function",
					"status": "skipped",
					"title": "should integrate with existing fixPathIssuesAST function",
					"failureMessages": [],
					"location": { "line": 152, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Enhanced Path Processing Integration"],
					"fullName": "Enhanced AST Processor Enhanced Path Processing Integration should handle the original PATH_FIXES patterns correctly",
					"status": "skipped",
					"title": "should handle the original PATH_FIXES patterns correctly",
					"failureMessages": [],
					"location": { "line": 162, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Comprehensive Debug Logging"],
					"fullName": "Enhanced AST Processor Comprehensive Debug Logging should enable debug logging for path calculations",
					"status": "skipped",
					"title": "should enable debug logging for path calculations",
					"failureMessages": [],
					"location": { "line": 179, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Comprehensive Debug Logging"],
					"fullName": "Enhanced AST Processor Comprehensive Debug Logging should track path correction details for debugging",
					"status": "skipped",
					"title": "should track path correction details for debugging",
					"failureMessages": [],
					"location": { "line": 189, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Real-world Integration Scenarios"],
					"fullName": "Enhanced AST Processor Real-world Integration Scenarios should handle complex validation output with mixed path violations",
					"status": "skipped",
					"title": "should handle complex validation output with mixed path violations",
					"failureMessages": [],
					"location": { "line": 206, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Real-world Integration Scenarios"],
					"fullName": "Enhanced AST Processor Real-world Integration Scenarios should validate correctness of corrections before applying",
					"status": "skipped",
					"title": "should validate correctness of corrections before applying",
					"failureMessages": [],
					"location": { "line": 222, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Error Handling and Edge Cases"],
					"fullName": "Enhanced AST Processor Error Handling and Edge Cases should handle malformed file paths gracefully",
					"status": "skipped",
					"title": "should handle malformed file paths gracefully",
					"failureMessages": [],
					"location": { "line": 238, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Enhanced AST Processor", "Error Handling and Edge Cases"],
					"fullName": "Enhanced AST Processor Error Handling and Edge Cases should handle patterns too deeply nested",
					"status": "skipped",
					"title": "should handle patterns too deeply nested",
					"failureMessages": [],
					"location": { "line": 250, "column": 13 },
					"meta": {}
				}
			],
			"startTime": 1758984004470,
			"endTime": 1758984004470,
			"status": "passed",
			"message": "",
			"name": "/home/matt/code/system/kilocode/scripts/docs-fixes/src/enhanced-ast-processor.test.js"
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["PatternDetector", "Constructor and Initialization"],
					"fullName": "PatternDetector Constructor and Initialization should initialize with pattern detection data structure",
					"status": "skipped",
					"title": "should initialize with pattern detection data structure",
					"failureMessages": [],
					"location": { "line": 52, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Constructor and Initialization"],
					"fullName": "PatternDetector Constructor and Initialization should initialize with empty violation maps",
					"status": "skipped",
					"title": "should initialize with empty violation maps",
					"failureMessages": [],
					"location": { "line": 61, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Detection"],
					"fullName": "PatternDetector Pattern Detection should detect GLOSSARY.md path patterns",
					"status": "skipped",
					"title": "should detect GLOSSARY.md path patterns",
					"failureMessages": [],
					"location": { "line": 69, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Detection"],
					"fullName": "PatternDetector Pattern Detection should detect orchestrator cross-reference patterns",
					"status": "skipped",
					"title": "should detect orchestrator cross-reference patterns",
					"failureMessages": [],
					"location": { "line": 77, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Detection"],
					"fullName": "PatternDetector Pattern Detection should detect architecture path patterns",
					"status": "skipped",
					"title": "should detect architecture path patterns",
					"failureMessages": [],
					"location": { "line": 85, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Detection"],
					"fullName": "PatternDetector Pattern Detection should detect standards/core path patterns",
					"status": "skipped",
					"title": "should detect standards/core path patterns",
					"failureMessages": [],
					"location": { "line": 93, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Detection"],
					"fullName": "PatternDetector Pattern Detection should detect DOCUMENTATION_GUIDE patterns",
					"status": "skipped",
					"title": "should detect DOCUMENTATION_GUIDE patterns",
					"failureMessages": [],
					"location": { "line": 101, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Analysis"],
					"fullName": "PatternDetector Pattern Analysis should process validation output to extract all pattern violations",
					"status": "skipped",
					"title": "should process validation output to extract all pattern violations",
					"failureMessages": [],
					"location": { "line": 111, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Analysis"],
					"fullName": "PatternDetector Pattern Analysis should categorize violations by pattern type",
					"status": "skipped",
					"title": "should categorize violations by pattern type",
					"failureMessages": [],
					"location": { "line": 119, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Pattern Analysis"],
					"fullName": "PatternDetector Pattern Analysis should categorize violations by file location",
					"status": "skipped",
					"title": "should categorize violations by file location",
					"failureMessages": [],
					"location": { "line": 127, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Cross-Reference Issue Location Mapping"],
					"fullName": "PatternDetector Cross-Reference Issue Location Mapping should identify orchestrator cross-reference issues and locations",
					"status": "skipped",
					"title": "should identify orchestrator cross-reference issues and locations",
					"failureMessages": [],
					"location": { "line": 137, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Cross-Reference Issue Location Mapping"],
					"fullName": "PatternDetector Cross-Reference Issue Location Mapping should map architecture path depth violations",
					"status": "skipped",
					"title": "should map architecture path depth violations",
					"failureMessages": [],
					"location": { "line": 145, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Cross-Reference Issue Location Mapping"],
					"fullName": "PatternDetector Cross-Reference Issue Location Mapping should categorize standards/core/ subdirectory complications",
					"status": "skipped",
					"title": "should categorize standards/core/ subdirectory complications",
					"failureMessages": [],
					"location": { "line": 157, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Cross-Reference Issue Location Mapping"],
					"fullName": "PatternDetector Cross-Reference Issue Location Mapping should analyze DOCUMENTATION_GUIDE.md cross-reference challenges",
					"status": "skipped",
					"title": "should analyze DOCUMENTATION_GUIDE.md cross-reference challenges",
					"failureMessages": [],
					"location": { "line": 168, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Violation Analysis Report Generation"],
					"fullName": "PatternDetector Violation Analysis Report Generation should generate categorized violation analysis report",
					"status": "skipped",
					"title": "should generate categorized violation analysis report",
					"failureMessages": [],
					"location": { "line": 181, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Violation Analysis Report Generation"],
					"fullName": "PatternDetector Violation Analysis Report Generation should provide TOP 10 error patterns",
					"status": "skipped",
					"title": "should provide TOP 10 error patterns",
					"failureMessages": [],
					"location": { "line": 190, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Violation Analysis Report Generation"],
					"fullName": "PatternDetector Violation Analysis Report Generation should provide file cluster analysis for problem areas",
					"status": "skipped",
					"title": "should provide file cluster analysis for problem areas",
					"failureMessages": [],
					"location": { "line": 199, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Integration with Enhanced Docs-Fixer"],
					"fullName": "PatternDetector Integration with Enhanced Docs-Fixer should link analyzer output to enhanced docs-fixer implementation",
					"status": "skipped",
					"title": "should link analyzer output to enhanced docs-fixer implementation",
					"failureMessages": [],
					"location": { "line": 214, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Integration with Enhanced Docs-Fixer"],
					"fullName": "PatternDetector Integration with Enhanced Docs-Fixer should provide familiarity enhanced categorization for fixPathIssuesAST",
					"status": "skipped",
					"title": "should provide familiarity enhanced categorization for fixPathIssuesAST",
					"failureMessages": [],
					"location": { "line": 223, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Error Handling and Edge Cases"],
					"fullName": "PatternDetector Error Handling and Edge Cases should handle empty validation output gracefully",
					"status": "skipped",
					"title": "should handle empty validation output gracefully",
					"failureMessages": [],
					"location": { "line": 233, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Error Handling and Edge Cases"],
					"fullName": "PatternDetector Error Handling and Edge Cases should handle malformed validation outputs",
					"status": "skipped",
					"title": "should handle malformed validation outputs",
					"failureMessages": [],
					"location": { "line": 240, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["PatternDetector", "Error Handling and Edge Cases"],
					"fullName": "PatternDetector Error Handling and Edge Cases should reduce duplicate pattern detection occurrences",
					"status": "skipped",
					"title": "should reduce duplicate pattern detection occurrences",
					"failureMessages": [],
					"location": { "line": 248, "column": 13 },
					"meta": {}
				}
			],
			"startTime": 1758984004470,
			"endTime": 1758984004470,
			"status": "passed",
			"message": "",
			"name": "/home/matt/code/system/kilocode/scripts/docs-fixes/src/pattern-detector.test.js"
		},
		{
			"assertionResults": [
				{
					"ancestorTitles": ["Documentation Fixer", "Configuration"],
					"fullName": "Documentation Fixer Configuration should have valid CONFIG object",
					"status": "skipped",
					"title": "should have valid CONFIG object",
					"failureMessages": [],
					"location": { "line": 27, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Configuration"],
					"fullName": "Documentation Fixer Configuration should have valid PATH_FIXES configuration",
					"status": "skipped",
					"title": "should have valid PATH_FIXES configuration",
					"failureMessages": [],
					"location": { "line": 35, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Configuration"],
					"fullName": "Documentation Fixer Configuration should have valid LINK_TEXT_IMPROVEMENTS configuration",
					"status": "skipped",
					"title": "should have valid LINK_TEXT_IMPROVEMENTS configuration",
					"failureMessages": [],
					"location": { "line": 44, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Configuration"],
					"fullName": "Documentation Fixer Configuration should have valid NAVIGATION_TEMPLATES configuration",
					"status": "skipped",
					"title": "should have valid NAVIGATION_TEMPLATES configuration",
					"failureMessages": [],
					"location": { "line": 53, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Core Functionality"],
					"fullName": "Documentation Fixer Core Functionality main function should be defined",
					"status": "skipped",
					"title": "main function should be defined",
					"failureMessages": [],
					"location": { "line": 63, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Core Functionality"],
					"fullName": "Documentation Fixer Core Functionality should handle empty file lists gracefully",
					"status": "skipped",
					"title": "should handle empty file lists gracefully",
					"failureMessages": [],
					"location": { "line": 67, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Path Fixes"],
					"fullName": "Documentation Fixer Path Fixes PATH_FIXES should contain essential path corrections",
					"status": "skipped",
					"title": "PATH_FIXES should contain essential path corrections",
					"failureMessages": [],
					"location": { "line": 84, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Path Fixes"],
					"fullName": "Documentation Fixer Path Fixes PATH_FIXES should have valid fixes structure",
					"status": "skipped",
					"title": "PATH_FIXES should have valid fixes structure",
					"failureMessages": [],
					"location": { "line": 93, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Link Text Improvements"],
					"fullName": "Documentation Fixer Link Text Improvements LINK_TEXT_IMPROVEMENTS should contain essential patterns",
					"status": "skipped",
					"title": "LINK_TEXT_IMPROVEMENTS should contain essential patterns",
					"failureMessages": [],
					"location": { "line": 108, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Link Text Improvements"],
					"fullName": "Documentation Fixer Link Text Improvements LINK_TEXT_IMPROVEMENTS should have valid descriptions",
					"status": "skipped",
					"title": "LINK_TEXT_IMPROVEMENTS should have valid descriptions",
					"failureMessages": [],
					"location": { "line": 120, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Navigation Templates"],
					"fullName": "Documentation Fixer Navigation Templates should have templates for major sections",
					"status": "skipped",
					"title": "should have templates for major sections",
					"failureMessages": [],
					"location": { "line": 136, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Navigation Templates"],
					"fullName": "Documentation Fixer Navigation Templates templates should contain valid markdown",
					"status": "skipped",
					"title": "templates should contain valid markdown",
					"failureMessages": [],
					"location": { "line": 144, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Integration"],
					"fullName": "Documentation Fixer Integration should export main function with correct signature",
					"status": "skipped",
					"title": "should export main function with correct signature",
					"failureMessages": [],
					"location": { "line": 154, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Integration"],
					"fullName": "Documentation Fixer Integration should handle configuration consistency",
					"status": "skipped",
					"title": "should handle configuration consistency",
					"failureMessages": [],
					"location": { "line": 166, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Error Handling"],
					"fullName": "Documentation Fixer Error Handling should handle missing configuration gracefully",
					"status": "skipped",
					"title": "should handle missing configuration gracefully",
					"failureMessages": [],
					"location": { "line": 180, "column": 13 },
					"meta": {}
				},
				{
					"ancestorTitles": ["Documentation Fixer", "Error Handling"],
					"fullName": "Documentation Fixer Error Handling should handle malformed PITY files gracefully",
					"status": "skipped",
					"title": "should handle malformed PITY files gracefully",
					"failureMessages": [],
					"location": { "line": 186, "column": 13 },
					"meta": {}
				}
			],
			"startTime": 1758984004470,
			"endTime": 1758984004470,
			"status": "passed",
			"message": "",
			"name": "/home/matt/code/system/kilocode/scripts/docs-fixes/test/docs-fixer-vitest.test.js"
		}
	]
}
